<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
    xmlns:CustomControls="clr-namespace:Theme.CustomControl"
    xmlns:Converter="clr-namespace:Theme.Converters"
    xmlns:Helper="clr-namespace:Theme.Helper">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="../ThemeCommonDefine.xaml" />
        <ResourceDictionary Source="Images.xaml" />
        <ResourceDictionary Source="ButtonStyles.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <Converter:WidthAndHeightToRectConverter x:Key="WidthAndHeightToRectConverter" />
    <Converter:SystemWorkAreaToMarginConverter x:Key="SystemWorkAreaToMarginConverter" />

    <Style x:Key="WindowChromeStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome UseAeroCaptionButtons="False"
                              CaptionHeight="{Binding Path=(SystemParameters.WindowNonClientFrameThickness).Top}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="WindowBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="LayoutRoot"  Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="WindowTitlePanel" Grid.Row="0" Height="{Binding Path=(SystemParameters.WindowNonClientFrameThickness).Top}" 
                                  Background="{TemplateBinding BorderBrush}" Margin="0,-1,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" Orientation="Horizontal">
                                    <Image Source="{TemplateBinding Icon}" Height="{x:Static SystemParameters.SmallIconHeight}" Width="{x:Static SystemParameters.SmallIconWidth}" WindowChrome.IsHitTestVisibleInChrome="True" />
                                    <ContentControl FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSize}}" Content="{TemplateBinding Title}" />
                                </StackPanel>

                                <StackPanel x:Name="WindowCommandButtonsPanel" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" 
                                            WindowChrome.IsHitTestVisibleInChrome="True" Margin="0,0,-1,0">
                                    <ContentPresenter Content="{Binding FunctionBar, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Focusable="False" />
                                    <CustomControls:ImageButton x:Name="MinimizeButton" Style="{DynamicResource ButtonMinStyle}" Command="{Binding MinimizeWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Grid Margin="1,0,1,0">
                                        <CustomControls:ImageButton x:Name="RestoreButton" Style="{DynamicResource ButtonMaxMaximizedStyle}" Command="{Binding MaximizeWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" />
                                        <CustomControls:ImageButton x:Name="MaximizeButton" Style="{DynamicResource ButtonMaxStyle}" Command="{Binding MaximizeWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                    <CustomControls:ImageButton x:Name="CloseButton" Style="{DynamicResource ButtonCloseStyle}" Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                                </StackPanel>
                            </Grid>
                            <AdornerDecorator Grid.Row="1" KeyboardNavigation.IsTabStop="False">
                                <ContentPresenter x:Name="MainContentPresenter" Content="{TemplateBinding Content}" KeyboardNavigation.TabNavigation="Cycle" />
                            </AdornerDecorator>
                            <ResizeGrip x:Name="ResizeGrip" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region Maximized-->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="WindowBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="WindowBorder" Property="Padding" Value="{x:Static SystemParameters.WindowResizeBorderThickness}" />
                            <Setter Property="Margin" TargetName="LayoutRoot" Value="{x:Static Helper:WindowParameters.PaddedBorderThickness}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region ResizeGrip-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>